I was writing a login form for an application I'm working on and I decided I didn't want to use the standard '*' as my password character. I wanted to use the black circle (?), the same one that windows login uses. I figured out what the Unicode value for it was (0x25CF) and then I tried to set that as the password character for my textbox through the designer but no luck it would only take standard ASCII characters. So I decided to set in my form constructor, like:

this.txtPassword.PasswordChar = '\u25CF';

Which worked so now when the user types in their password the see '?' as opposed to '*'. I just figured I would pass this along incase anyone else wants to do the same. I don't know if the same kind of thing will work in ASP.NET or not but it would be cool to find out.

UPDATE: It appears that the new textbox in .NET 2.0 contains a property UseSystemPasswordChar, that when set will make it use the system password character and literally treat it as a standard windows password textbox. Thanks to David Kean for pointint this out.


There is a solution which always works (for Windows Forms apps) : 
Set passwordchar to l (min L) 
And set the font to Wingdings 
That's All :) 

==============================================================================================================================

A Better Password TextBox 
Through Duncan, Wes showed a method that allows you to use the same black circle that Windows XP uses for its password character. However, I found a method that works better for me.

By extending the standard textbox and applying the ES_PASSWORD edit control style, you not only get the same black circle, you also get a balloon window warning the user if they have capslock enabled:

 .


#region Using directives

using System;
using System.Windows.Forms;
using System.Security;
using System.Security.Permissions;

#endregion

namespace AusSoft.Windows.Forms
{
	/// <summary>
	///		<para>
	///			Represents a Windows password text box control that masks characters.
	///		</para>
	/// </summary>
	public class PasswordTextBox : TextBox
	{
		private const int ES_PASSWORD = 32;

		/// <summary>
		///		<para>
		///			Initializes a new instance of the <see cref="PasswordTextBox"/> class.
		///		</para>
		/// </summary>
		public PasswordTextBox()
		{
		}

		/// <summary>
		///     <para>
		///         This member overrides <see cref="TextBox.CreateParams">TextBox.CreateParams</see>.
		///      </para>
		/// </summary>
		/// <value>
		///		A <see cref="CreateParams"/> object that contains the required creation parameters when the handle to the control is created.
		/// </value>
		protected override CreateParams CreateParams
		{
			[SecurityPermission(SecurityAction.LinkDemand, UnmanagedCode=true)]
			get
			{
				CreateParams parameters = base.CreateParams;
				
				parameters.Style = (parameters.Style | ES_PASSWORD);
				
				return parameters;
			}
		}
	}
}


Use the above class in your project, making sure that call
Application.EnableVisualStyles();
in your main method. The PasswordChar property on the TextBox class is not needed. 

