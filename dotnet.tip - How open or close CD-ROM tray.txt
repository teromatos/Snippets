// Marshal.cs
using System;
using System.Text;
using System.Runtime.InteropServices;

class PlatformInvokeTest
{
	[DllImport("msvcrt.dll")]
	public static extern int puts(
		[MarshalAs(UnmanagedType.LPStr)]
		string m);
	[DllImport("msvcrt.dll")]
	internal static extern int _flushall();


	public static void Main() 
	{
		puts("Hello World!");
		CloseCdTray();
		//OpenCdTray();
		_flushall();
	}


	[DllImport("winmm.dll", EntryPoint="mciSendStringA",    
		 CharSet=CharSet.Ansi)]
	public static extern int MciSendString(string lpszCommand, 
		StringBuilder lpszReturnString, int cchReturn, IntPtr hwndCallback);


	private static void CloseCdTray()
	{
		MciSendString("Set cdaudio door closed wait", null, 0, IntPtr.Zero);
	}

	private static void OpenCdTray()
	{
		MciSendString("Set cdaudio door open wait", null, 0, IntPtr.Zero);
	}


}
